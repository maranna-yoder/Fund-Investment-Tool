}
load("closet_links_example.RDa")
closet_links %<>% select(-user, -item_id, -search_url, -scrape_time)
sample <- closet_links[10:14,]
kable(sample, row.names = FALSE)
load("closet_items_example.RDa")
items <- update_closet %<>% select(-user, -item_id, -date_scraped)
items$last_updated[c(553, 560, 564, 570, 573, 580, 1654, 1034, 971, 2700)]
load("final_closet_example.RDa")
items_sample <- combined_data %>%
select(-user, -days_to_sell, -month_sold, -year_sold, -month_posted, -item_id, -date_scraped) %>%
select(title, brand, market, category, price, date_posted,
status, last_updated, date_sold, size, color1, color2, item_url)
items_sample <- items_sample[c(553, 559, 565, 568, 580, 704, 1654, 1034, 975, 2700),]
kable(items_sample[,1:5], row.names = FALSE)
kable(items_sample[,6:12], row.names = FALSE)
knitr::opts_chunk$set(echo = TRUE, fig.align = "center")
rm(list = ls())
library(knitr)
library(magrittr)
library(dplyr)
library(gt)
knitr::include_graphics("IMG_4154.PNG")
NodesToText <- function(page, tag){
html_data <- html_nodes(page, tag)
text <- html_text(html_data) %>%
as.character() %>%
trimws
if(length(text) == 0) text <- NA
return(text)
}
load("closet_links_example.RDa")
closet_links %<>% select(-user, -item_id, -search_url, -scrape_time)
sample <- closet_links[10:14,]
kable(sample, row.names = FALSE)
load("closet_items_example.RDa")
items <- update_closet %<>% select(-user, -item_id, -date_scraped)
items$last_updated[c(553, 560, 564, 570, 573, 580, 1654, 1034, 971, 2700)]
load("final_closet_example.RDa")
items_sample <- combined_data %>%
select(-user, -days_to_sell, -month_sold, -year_sold, -month_posted, -item_id, -date_scraped) %>%
select(title, brand, market, category, price, date_posted) %>%
select(status, last_updated, date_sold, size, color1, color2, item_url)
load("final_closet_example.RDa")
items_sample <- combined_data %>%
select(-user, -days_to_sell, -month_sold, -year_sold, -month_posted, -item_id, -date_scraped) %>%
select(title, brand, market, category, price, date_posted, status, last_updated, date_sold, size, color1, color2,     item_url)
items_sample <- items_sample[c(553, 559, 565, 568, 580, 704, 1654, 1034, 975, 2700),]
knitr::opts_chunk$set(echo = TRUE, fig.align = "center")
rm(list = ls())
library(knitr)
library(magrittr)
library(dplyr)
library(gt)
knitr::include_graphics("IMG_4154.PNG")
NodesToText <- function(page, tag){
html_data <- html_nodes(page, tag)
text <- html_text(html_data) %>%
as.character() %>%
trimws
if(length(text) == 0) text <- NA
return(text)
}
load("closet_links_example.RDa")
closet_links %<>% select(-user, -item_id, -search_url, -scrape_time)
sample <- closet_links[10:14,]
kable(sample, row.names = FALSE)
load("closet_items_example.RDa")
items <- update_closet %<>% select(-user, -item_id, -date_scraped)
items$last_updated[c(553, 560, 564, 570, 573, 580, 1654, 1034, 971, 2700)]
load("final_closet_example.RDa")
items_sample <- combined_data %>%
select(-user, -days_to_sell, -month_sold, -year_sold, -month_posted, -item_id, -date_scraped) %>%
select(title, brand, market, category, price, date_posted, status, last_updated, date_sold, size, color1, color2,     item_url)
items_sample <- items_sample[c(553, 559, 565, 568, 580, 704, 1654, 1034, 975, 2700),]
kable(items_sample[,1:5], row.names = FALSE)
kable(items_sample[,6:12], row.names = FALSE)
gc()
knitr::opts_chunk$set(echo = TRUE, fig.align = "center")
rm(list = ls())
library(knitr)
library(magrittr)
library(dplyr)
library(gt)
knitr::include_graphics("IMG_4154.PNG")
NodesToText <- function(page, tag){
html_data <- html_nodes(page, tag)
text <- html_text(html_data) %>%
as.character() %>%
trimws
if(length(text) == 0) text <- NA
return(text)
}
load("closet_links_example.RDa")
closet_links %<>% select(-user, -item_id, -search_url, -scrape_time)
sample <- closet_links[10:14,]
kable(sample, row.names = FALSE)
load("closet_items_example.RDa")
items <- update_closet %<>% select(-user, -item_id, -date_scraped)
items$last_updated[c(553, 560, 564, 570, 573, 580, 1654, 1034, 971, 2700)]
load("final_closet_example.RDa")
items_sample <- combined_data %>%
select(-user, -days_to_sell, -month_sold, -year_sold, -month_posted, -item_id, -date_scraped) %>%
select(title, brand, market, category, price, date_posted, status, last_updated, date_sold, size, color1, color2,     item_url)
items_sample <- items_sample[c(553, 559, 565, 568, 580, 704, 1654, 1034, 975, 2700),]
kable(items_sample[,1:5], row.names = FALSE)
kable(items_sample[,6:12], row.names = FALSE)
knitr::opts_chunk$set(echo = TRUE, fig.align = "center")
rm(list = ls())
library(knitr)
library(magrittr)
library(dplyr)
library(gt)
knitr::include_graphics("IMG_4154.PNG")
NodesToText <- function(page, tag){
html_data <- html_nodes(page, tag)
text <- html_text(html_data) %>%
as.character() %>%
trimws
if(length(text) == 0) text <- NA
return(text)
}
load("closet_links_example.RDa")
closet_links %<>% select(-user, -item_id, -search_url, -scrape_time)
sample <- closet_links[10:14,]
kable(sample, row.names = FALSE)
load("closet_items_example.RDa")
items <- update_closet %<>% select(-user, -item_id, -date_scraped)
items$last_updated[c(553, 560, 564, 570, 573, 580, 1654, 1034, 971, 2700)]
load("final_closet_example.RDa")
items_sample <- combined_data %>%
select(-user, -days_to_sell, -month_sold, -year_sold, -month_posted, -item_id, -date_scraped) %>%
select(title, brand, market, category, price, date_posted, status, last_updated, date_sold, size, color1, color2,     item_url)
items_sample <- items_sample[c(553, 559, 565, 568, 580, 704, 1654, 1034, 975, 2700),]
kable(items_sample[,1:5], row.names = FALSE)
kable(items_sample[,6:12], row.names = FALSE)
rm(list = list = )
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE)
library(rvest)
library(dplyr)
library(stringr)
library(lubridate)
library(magrittr)
library(ggplot2)
library(RColorBrewer)
library(gt)
rm(list = ls())
# Load closets
paths <- c("reseller_a_closet_20200721.RDa",
"reseller_c_closet_20200723.RDa",
"reseller_b_closet_20200724.RDa")
LoadFunction <- function(path){
load(path)
return(combined_data)
}
closet_data <- lapply(paths, LoadFunction) %>% bind_rows
table(closet_data$user)
# Load closets
paths <- c("reseller_a_closet_20200721.RDa",
"reseller_c_closet_20200723.RDa",
"reseller_b_closet_20200724.RDa")
LoadFunction <- function(path){
load(path)
return(combined_data)
}
closet_data <- lapply(paths, LoadFunction) %>% bind_rows
closet_data %<>% mutate(user = ifelse(user == "mogibeth", "A",
ifelse(user == "emptyhanger", "B",
ifelse(user == "nicolestate", "C", NA))))
table(closet_data$user)
date_start <- "2019-07-01"
date_end <- "2020-06-30"
active_summary <- closet_data %>%
filter(status == "Available") %>%
group_by(user) %>%
summarize(active_listings = n())
sold_summary <- closet_data %>%
filter(status == "Sold") %>%
filter(date_sold >= date_start & date_sold <= date_end) %>%
group_by(user) %>%
summarize(
total_sales   = sum(price)/1000,
total_revenue = sum(revenue)/1000,
items_sold    = n()) %>%
mutate(asp      = total_sales*1000 / items_sold)
active_summary <- closet_data %>%
filter(status == "Available") %>%
group_by(user) %>%
summarize(active_listings = n())
sold_summary <- closet_data %>%
filter(status == "Sold") %>%
filter(date_sold >= date_start & date_sold <= date_end) %>%
group_by(user) %>%
summarize(
total_sales   = sum(price)/1000,
items_sold    = n()) %>%
mutate(asp      = total_sales*1000 / items_sold)
View(active_summary)
View(sold_summary)
overall_summary <- left_join(active_summary, sold_summary)
overall_summary <- left_join(active_summary, sold_summary, by = "user")
date_start <- "2019-07-01"
date_end <- "2020-06-30"
active_summary <- closet_data %>%
filter(status == "Available") %>%
group_by(user) %>%
summarize(active_listings = n())
sold_summary <- closet_data %>%
filter(status == "Sold") %>%
filter(date_sold >= date_start & date_sold <= date_end) %>%
group_by(user) %>%
summarize(
total_sales   = sum(price)/1000,
items_sold    = n()) %>%
mutate(asp      = total_sales*1000 / items_sold)
overall_summary <- left_join(active_summary, sold_summary, by = "user")
kable(overall_summary)
?kable
test <- readRDS("C:/Users/maran/Dropbox/Web Scraping/inter/just_sold/results_2020-08-06.RDS")
test <- readRDS("C:/Users/maran/Dropbox/Web Scraping/inter/just_sold/results_2020-08-06_2000.RDS")
View(test)
test <- readRDS("C:/Users/maran/Dropbox/Web Scraping/inter/just_sold/results_subcategory_2020-08-06_1330.RDS")
test <- readRDS("C:/Users/maran/Dropbox/Web Scraping/inter/just_sold/results_subcategory_2020-08-06_1440.RDS")
View(test)
table(test$super_category)
sum(is.na(test))
sum(is.na(test$super_category))
sum(is.na(test$title))
sum(is.na(test$price))
sum(is.na(test$market))
sum(is.na(test$item_url))
sum(is.na(test$date_posted))
sum(is.na(test$size))
sum(is.na(test$nwt))
sum(is.na(test$status))
sum(is.na(test$scrape_time))
sum(is.na(test$item_id))
sum(is.na(test$item_url))
sum(is.na(test$search_url))
sum(is.na(test$scrape_id))
sum(is.na(test$days_to_sell))
sum(is.na(test$date_sold))
sum(is.na(test$scrape_time))
sum(is.na(test$user))
sum(is.na(test$price_range))
sum(is.na(test$category))
sum(is.na(test$subcategory))
sum(is.na(test$boutique))
sum(is.na(test$nwt))
str(test)
glimpse(test)
library(dplyr)
glimpse(test)
sum(is.na(test))
sum(is.na(test$brand))
install.packages(c("backports", "broom", "callr", "cpp11", "data.table", "dbplyr", "ellipsis", "fs", "ggplot2", "glue", "gt", "haven", "htmltools", "httpuv", "httr", "isoband", "jsonlite", "later", "lubridate", "modelr", "openssl", "pillar", "pkgbuild", "pkgload", "processx", "promises", "ps", "purrr", "Rcpp", "reshape2", "rJava", "robotstxt", "rvest", "scales", "shiny", "SnowballC", "stopwords", "sys", "textdata", "tidytext", "tinytex", "withr", "writexl", "xml2", "zoo"))
library(updateR)
install.packages("updateR")
library("installr")
library(dplyr)
install.packages("dplyr")
install.packages("installr")
install.packages("lubridate")
install.packages("tidyverse")
install.packages("tidyquant")
install.packages("openxlsx")
library(tidyquant)
library(dplyr)
library(xlsx)
rm(list = ls())
gc()
setwd("C:/Users/maran/Documents/Data Stuff/Fund Investment Tool")
wb <- loadWorkbook(file = "Investment Analysis Tool.xlsx")
funds <- read.xlsx("Investment Analysis Tool.xlsx", sheetName = "funds")
tickers <- funds %>% pull(ticker)
# Historical Prices
stocks_historical <- tq_get(tickers,
from = "2010-01-01",
to = "2019-12-31",
get = "stock.prices")
annual_returns <- stocks_historical %>%
filter(!is.na(close)) %>%
group_by(symbol) %>%
tq_transmute(select = close,
mutate_fun = periodReturn,
period = "yearly",
type = "arithmetic")
avg_annual_returns <- annual_returns %>%
group_by(symbol) %>%
summarize(avg_return = mean(yearly.returns),
obs = n())
removeSheet(wb, sheetName = "avg annual returns")
newSheet <- createSheet(wb, sheetName="avg annual returns")
addDataFrame(avg_annual_returns, newSheet, row.names = F)
# year to date & 6 month rolling
six_months <- today() - months(6)
year_start <- as.Date("2020-01-01")
earliest_date <- min(six_months, year_start)
today <- today()
stocks <- tq_get(tickers,
from = earliest_date,
to = today,
get = "stock.prices")
ytd_return <- stocks %>%
group_by(symbol) %>%
filter(date >= year_start) %>%
filter(!is.na(close)) %>%
tq_transmute(select = close,
mutate_fun = periodReturn,
period = "yearly",
type = "arithmetic") %>%
mutate(type = "ytd",
start_date = year_start) %>%
rename(end_date = date,
return = yearly.returns,
ticker = symbol) %>%
select(ticker, start_date, end_date, return, type)
sixmo_return <- stocks %>%
group_by(symbol) %>%
filter(date >= six_months) %>%
filter(!is.na(close)) %>%
tq_transmute(select = close,
mutate_fun = periodReturn,
period = "yearly",
type = "arithmetic") %>%
mutate(type = "6 mo rolling",
start_date = six_months) %>%
rename(end_date = date,
return = yearly.returns,
ticker = symbol) %>%
select(ticker, start_date, end_date, return, type)
returns <- bind_rows(ytd_return, sixmo_return) %>% data.frame
removeSheet(wb, sheetName = "ytd returns")
newSheet <- createSheet(wb, sheetName="ytd returns")
addDataFrame(returns, newSheet, row.names = F)
saveWorkbook(wb, "Investment Analysis Tool.xlsx")
avg_annual_returns <- annual_returns %>%
group_by(symbol) %>%
summarize(avg_return = mean(yearly.returns),
obs = n()) %>%
data.frame()
removeSheet(wb, sheetName = "avg annual returns")
newSheet <- createSheet(wb, sheetName="avg annual returns")
addDataFrame(avg_annual_returns, newSheet, row.names = F)
saveWorkbook(wb, "Investment Analysis Tool.xlsx")
ytd_return <- stocks %>%
group_by(symbol) %>%
filter(date >= year_start) %>%
filter(!is.na(close)) %>%
tq_transmute(select = close,
mutate_fun = periodReturn,
period = "yearly",
type = "arithmetic") %>%
mutate(type = "ytd") %>%
rename(date_pulled = date,
return = yearly.returns,
ticker = symbol) %>%
select(ticker, date_pulled, return, type)
sixmo_return <- stocks %>%
group_by(symbol) %>%
filter(date >= six_months) %>%
filter(!is.na(close)) %>%
tq_transmute(select = close,
mutate_fun = periodReturn,
period = "yearly",
type = "arithmetic") %>%
mutate(type = "6 mo rolling") %>%
rename(date_pulled = date,
return = yearly.returns,
ticker = symbol) %>%
select(ticker, end_date, return, type)
sixmo_return <- stocks %>%
group_by(symbol) %>%
filter(date >= six_months) %>%
filter(!is.na(close)) %>%
tq_transmute(select = close,
mutate_fun = periodReturn,
period = "yearly",
type = "arithmetic") %>%
mutate(type = "6 mo rolling") %>%
rename(date_pulled = date,
return = yearly.returns,
ticker = symbol) %>%
select(ticker, date_pulled, return, type)
returns <- bind_rows(ytd_return, sixmo_return)
View(returns)
?spread
?pivot_wider
returns <- bind_rows(ytd_return, sixmo_return) %>%
pivot_wider(names_from = type, values_from = return)
library(tidyr)
returns <- bind_rows(ytd_return, sixmo_return) %>%
pivot_wider(names_from = type, values_from = return)
View(returns)
sixmo_return <- stocks %>%
group_by(symbol) %>%
filter(date >= six_months) %>%
filter(!is.na(close)) %>%
tq_transmute(select = close,
mutate_fun = periodReturn,
period = "yearly",
type = "arithmetic") %>%
mutate(type = "rolling_6_mo") %>%
rename(date_pulled = date,
return = yearly.returns,
ticker = symbol) %>%
select(ticker, date_pulled, return, type)
returns <- bind_rows(ytd_return, sixmo_return) %>%
pivot_wider(names_from = type, values_from = return)
View(returns)
returns <- bind_rows(ytd_return, sixmo_return) %>%
pivot_wider(names_from = type, values_from = return) %>%
mutate(rank_ytd = rank(ytd),
rank_6mo = rank(rolling_6_mo))
View(returns)
returns <- bind_rows(ytd_return, sixmo_return) %>%
pivot_wider(names_from = type, values_from = return) %>%
ungroup() %>%
mutate(rank_ytd = rank(ytd),
rank_6mo = rank(rolling_6_mo))
View(returns)
?rank
returns <- bind_rows(ytd_return, sixmo_return) %>%
pivot_wider(names_from = type, values_from = return) %>%
ungroup() %>%
mutate(rank_ytd = rank(desc(ytd)),
rank_6mo = rank(rolling_6_mo))
View(returns)
returns <- bind_rows(ytd_return, sixmo_return) %>%
pivot_wider(names_from = type, values_from = return) %>%
ungroup() %>%
mutate(rank_ytd = rank(desc(ytd)),
rank_6mo = rank(desc(rolling_6_mo)))
View(returns)
returns <- bind_rows(ytd_return, sixmo_return) %>%
pivot_wider(names_from = type, values_from = return) %>%
ungroup() %>%
mutate(rank_ytd = rank(desc(ytd)),
rank_6mo = rank(desc(rolling_6_mo))) %>%
arrange(rank_ytd)
View(funds)
returns_full <- full_join(funds, ytd_return, by = "ticker")
View(returns_full)
returns_full <- full_join(funds, returns, by = "ticker")
View(ytd_return)
returns_full <- full_join(funds, returns, by = "ticker") %>% arrange(rank_ytd)
percent_year <- (today - year_start)/365
(today - year_start)
(today - year_start)/365
as.numeric(today - year_start)
percent_year <- as.numeric(today - year_start)/365
returns_full <- full_join(funds, returns, by = "ticker") %>%
mutate(ytd_adj = ytd - expense_ratio * percent_year) %>%
mutate(rank_ytd = rank(desc(ytd_adj))) %>%
arrange(rank_ytd)
View(returns_full)
returns_full <- full_join(funds, returns, by = "ticker") %>%
mutate(ytd_adj = ytd - expense_ratio * percent_year) %>%
mutate(rank_ytd2 = rank(desc(ytd_adj))) %>%
arrange(rank_ytd2)
returns_full <- full_join(funds, returns, by = "ticker") %>%
mutate(ytd_adj = ytd - expense_ratio * percent_year) %>%
mutate(rank_ytd = rank(desc(ytd_adj))) %>%
arrange(rank_ytd)
returns_class <- returns_full %>%
group_by(asset_class, size, type, location) %>%
summarize(median_ytd = median(ytd_adj),
median_6mo = median(rolling_6_mo),
funds = n()) %>%
arrange(desc(median_ytd))
View(returns_class)
returns_class <- returns_full %>%
group_by(asset_class, size, type, location) %>%
summarize(avg_ytd = mean(ytd_adj),
avg_6mo = mean(rolling_6_mo),
funds = n()) %>%
arrange(desc(median_ytd))
returns_class <- returns_full %>%
group_by(asset_class, size, type, location) %>%
summarize(avg_ytd = average(ytd_adj),
avg_6mo = average(rolling_6_mo),
funds = n()) %>%
arrange(desc(median_ytd))
returns_class <- returns_full %>%
group_by(asset_class, size, type, location) %>%
summarize(avg_ytd = mean(ytd_adj),
avg_6mo = mean(rolling_6_mo),
funds = n()) %>%
arrange(desc(median_ytd))
returns_full <- full_join(funds, returns, by = "ticker") %>%
mutate(ytd_adj = ytd - expense_ratio * percent_year) %>%
mutate(rank_ytd = rank(desc(ytd_adj))) %>%
arrange(rank_ytd)
returns_class <- returns_full %>%
group_by(asset_class, size, type, location) %>%
summarize(avg_ytd = mean(ytd_adj),
avg_6mo = mean(rolling_6_mo),
funds = n()) %>%
arrange(desc(median_ytd))
returns_class <- returns_full %>%
group_by(asset_class, size, type, location) %>%
summarize(avg_ytd = mean(ytd_adj),
avg_6mo = mean(rolling_6_mo),
funds = n()) %>%
arrange(desc(avg_ytd))
View(returns_class)
View(returns_full)
# Rescrape price and size information from missing spots
library(dplyr)
library(magrittr)
library(rvest)
